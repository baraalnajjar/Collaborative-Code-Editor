{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\editor\\\\CollaborativeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport '../../CSS/CollaborativeRoom.css';\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collaborative = () => {\n  _s();\n  const location = useLocation();\n  const {\n    project\n  } = location.state || {};\n  const [id, setId] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const [newChatMessage, setNewChatMessage] = useState(''); // State for new chat message\n  const [chatMessages, setChatMessages] = useState([]); // State for chat messages\n  const username = localStorage.getItem('username');\n  const [stompClient, setStompClient] = useState(null); // State to hold the Stomp client\n\n  useEffect(() => {\n    const createRoom = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        alert('Session expired. Please log in again.');\n        return;\n      }\n      setAuthHeader(token);\n      try {\n        console.log(\"Creating room...\");\n        const response = await request('post', '/room/create');\n        console.log(\"Response received:\", response);\n        if (response && response.data) {\n          const {\n            password,\n            roomId\n          } = response.data;\n          console.log(`Room created with ID: ${roomId}, Password: ${password}`);\n          setId(roomId);\n          setPassword(password);\n        } else {\n          console.error('Unexpected response format:', response);\n          setId(null);\n          setPassword(null);\n        }\n      } catch (error) {\n        console.error('Error creating room:', error);\n        setId(null);\n        setPassword(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchComments = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        alert('Session expired. Please log in again.');\n        return;\n      }\n      setAuthHeader(token);\n      try {\n        console.log(\"Fetching project ID...\");\n        const projectResponse = await request('GET', '/project/getId', {\n          project_name: project\n        });\n        console.log(\"Project ID response:\", projectResponse);\n        const projectId = projectResponse.data.id;\n        console.log(\"Fetching comments...\");\n        const commentsResponse = await request('GET', '/comment/read', {\n          project_id: projectId\n        });\n        console.log(\"Comments response:\", commentsResponse);\n        if (commentsResponse && commentsResponse.data && commentsResponse.data.comments) {\n          setComments(commentsResponse.data.comments);\n        } else {\n          console.error('No comments found:', commentsResponse);\n          setComments([]);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n        setComments([]);\n      }\n    };\n    createRoom();\n    fetchComments();\n  }, [project]);\n\n  // WebSocket connection and subscription\n  useEffect(() => {\n    if (id) {\n      const socket = new SockJS('http://localhost:8082/app');\n      const stomp = Stomp.over(socket);\n      stomp.connect({}, () => {\n        console.log('Connected to WebSocket');\n\n        // Subscribe to the chat room topic for receiving messages\n        stomp.subscribe(`/topic/room/${id}`, message => {\n          if (message.body) {\n            const receivedMessage = JSON.parse(message.body);\n            setChatMessages(prevMessages => [...prevMessages, {\n              sender: receivedMessage.sender,\n              content: receivedMessage.content,\n              date: new Date().toLocaleDateString(),\n              time: new Date().toLocaleTimeString()\n            }]);\n          }\n        });\n        setStompClient(stomp);\n      }, error => {\n        console.error('Error connecting to WebSocket:', error);\n      });\n\n      // Cleanup function to disconnect WebSocket on unmount\n      return () => {\n        stomp.disconnect();\n      };\n    }\n  }, [id]);\n  const handleAddComment = async () => {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    try {\n      const userIdResponse = await request('GET', '/editor/getId', {\n        editorName: username\n      });\n      const userId = userIdResponse.data;\n      const projectResponse = await request('GET', '/project/getId', {\n        project_name: project\n      });\n      const projectId = projectResponse.data.id;\n      const commentBody = {\n        comment: newComment,\n        project_id: projectId\n      };\n      await request('POST', `/comment/post?userID=${userId}`, commentBody);\n      setComments(prevComments => [...prevComments, {\n        name: username,\n        comment: newComment,\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString()\n      }]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      alert('Failed to add comment. Please try again.');\n    }\n  };\n  const handleSendChatMessage = () => {\n    if (!stompClient) {\n      alert('Not connected to WebSocket');\n      return;\n    }\n    const chatMessage = {\n      sender: username,\n      content: newChatMessage,\n      type: 'CHAT'\n    };\n    stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\n\n    // Optionally, add the chat message locally to the UI\n    setChatMessages(prevMessages => [...prevMessages, {\n      sender: username,\n      content: newChatMessage,\n      date: new Date().toLocaleDateString(),\n      time: new Date().toLocaleTimeString()\n    }]);\n\n    // Clear the input field\n    setNewChatMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collaborative-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-name-box\",\n      children: project ? `Collaborate on project: ${project}` : 'No Project'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"id-box\",\n      children: [loading ? 'Creating room...' : id ? `ID: ${id}` : 'No ID', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), loading ? '' : password ? `Password: ${password}` : 'No Password']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }, this), \": \", comment.comment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [comment.date, \" \", comment.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chatMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this), \": \", msg.content, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [msg.date, \" \", msg.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newChatMessage,\n        onChange: e => setNewChatMessage(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendChatMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n_s(Collaborative, \"6lFpYK7vGKAzSiLBQ4nvqo1JBKc=\", false, function () {\n  return [useLocation];\n});\n_c = Collaborative;\nexport default Collaborative;\nvar _c;\n$RefreshReg$(_c, \"Collaborative\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","SockJS","Stomp","request","setAuthHeader","Collaborative","location","project","state","id","setId","password","setPassword","comments","setComments","loading","setLoading","newComment","setNewComment","newChatMessage","setNewChatMessage","chatMessages","setChatMessages","username","localStorage","getItem","stompClient","setStompClient","createRoom","token","alert","console","log","response","data","roomId","error","fetchComments","projectResponse","project_name","projectId","commentsResponse","project_id","socket","stomp","over","connect","subscribe","message","body","receivedMessage","JSON","parse","prevMessages","sender","content","date","Date","toLocaleDateString","time","toLocaleTimeString","disconnect","handleAddComment","userIdResponse","editorName","userId","commentBody","comment","prevComments","name","handleSendChatMessage","chatMessage","type","send","stringify","length","map","index","e","target","value","msg"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/editor/CollaborativeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport '../../CSS/CollaborativeRoom.css'; \r\nimport { request, setAuthHeader } from '../../helpers/axios_helper'; \r\n\r\nconst Collaborative = () => {\r\n    const location = useLocation();\r\n    const { project } = location.state || {};\r\n    const [id, setId] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [newChatMessage, setNewChatMessage] = useState(''); // State for new chat message\r\n    const [chatMessages, setChatMessages] = useState([]); // State for chat messages\r\n    const username = localStorage.getItem('username');\r\n    const [stompClient, setStompClient] = useState(null); // State to hold the Stomp client\r\n\r\n    useEffect(() => {\r\n        const createRoom = async () => {\r\n            const token = localStorage.getItem('auth_token');\r\n            if (!token) {\r\n                alert('Session expired. Please log in again.');\r\n                return;\r\n            }\r\n\r\n            setAuthHeader(token);\r\n\r\n            try {\r\n                console.log(\"Creating room...\");\r\n                const response = await request('post', '/room/create');\r\n                console.log(\"Response received:\", response);\r\n\r\n                if (response && response.data) {\r\n                    const { password, roomId } = response.data;\r\n                    console.log(`Room created with ID: ${roomId}, Password: ${password}`);\r\n                    setId(roomId);\r\n                    setPassword(password);\r\n                } else {\r\n                    console.error('Unexpected response format:', response);\r\n                    setId(null);\r\n                    setPassword(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error creating room:', error);\r\n                setId(null);\r\n                setPassword(null);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        const fetchComments = async () => {\r\n            const token = localStorage.getItem('auth_token');\r\n            if (!token) {\r\n                alert('Session expired. Please log in again.');\r\n                return;\r\n            }\r\n\r\n            setAuthHeader(token);\r\n\r\n            try {\r\n                console.log(\"Fetching project ID...\");\r\n                const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n                console.log(\"Project ID response:\", projectResponse);\r\n\r\n                const projectId = projectResponse.data.id;\r\n\r\n                console.log(\"Fetching comments...\");\r\n                const commentsResponse = await request('GET', '/comment/read', { project_id: projectId });\r\n                console.log(\"Comments response:\", commentsResponse);\r\n\r\n                if (commentsResponse && commentsResponse.data && commentsResponse.data.comments) {\r\n                    setComments(commentsResponse.data.comments);\r\n                } else {\r\n                    console.error('No comments found:', commentsResponse);\r\n                    setComments([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error);\r\n                setComments([]);\r\n            }\r\n        };\r\n\r\n        createRoom();\r\n        fetchComments();\r\n    }, [project]);\r\n\r\n    // WebSocket connection and subscription\r\n    useEffect(() => {\r\n        if (id) {\r\n            const socket = new SockJS('http://localhost:8082/app');\r\n            const stomp = Stomp.over(socket);\r\n\r\n            stomp.connect({}, () => {\r\n                console.log('Connected to WebSocket');\r\n\r\n                // Subscribe to the chat room topic for receiving messages\r\n                stomp.subscribe(`/topic/room/${id}`, (message) => {\r\n                    if (message.body) {\r\n                        const receivedMessage = JSON.parse(message.body);\r\n                        setChatMessages((prevMessages) => [\r\n                            ...prevMessages,\r\n                            {\r\n                                sender: receivedMessage.sender,\r\n                                content: receivedMessage.content,\r\n                                date: new Date().toLocaleDateString(),\r\n                                time: new Date().toLocaleTimeString()\r\n                            }\r\n                        ]);\r\n                    }\r\n                });\r\n\r\n                setStompClient(stomp);\r\n            }, (error) => {\r\n                console.error('Error connecting to WebSocket:', error);\r\n            });\r\n\r\n            // Cleanup function to disconnect WebSocket on unmount\r\n            return () => {\r\n                stomp.disconnect();\r\n            };\r\n        }\r\n    }, [id]);\r\n\r\n    const handleAddComment = async () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n\r\n        setAuthHeader(token);\r\n\r\n        try {\r\n            const userIdResponse = await request('GET', '/editor/getId', { editorName: username });\r\n            const userId = userIdResponse.data;\r\n\r\n            const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n            const projectId = projectResponse.data.id;\r\n\r\n            const commentBody = {\r\n                comment: newComment,\r\n                project_id: projectId\r\n            };\r\n\r\n            await request('POST', `/comment/post?userID=${userId}`, commentBody);\r\n\r\n            setComments((prevComments) => [\r\n                ...prevComments,\r\n                { name: username, comment: newComment, date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString() }\r\n            ]);\r\n\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n            alert('Failed to add comment. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleSendChatMessage = () => {\r\n        if (!stompClient) {\r\n            alert('Not connected to WebSocket');\r\n            return;\r\n        }\r\n\r\n        const chatMessage = {\r\n            sender: username,\r\n            content: newChatMessage,\r\n            type: 'CHAT'\r\n        };\r\n\r\n        stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\r\n\r\n        // Optionally, add the chat message locally to the UI\r\n        setChatMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { sender: username, content: newChatMessage, date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString() }\r\n        ]);\r\n\r\n        // Clear the input field\r\n        setNewChatMessage('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"collaborative-container\">\r\n            <div className=\"project-name-box\">\r\n                {project ? `Collaborate on project: ${project}` : 'No Project'}\r\n            </div>\r\n            <div className=\"id-box\">\r\n                {loading ? 'Creating room...' : id ? `ID: ${id}` : 'No ID'}\r\n                <br />\r\n                {loading ? '' : password ? `Password: ${password}` : 'No Password'}\r\n            </div>\r\n            <div className=\"comments-section\">\r\n                <h3>Comments</h3>\r\n                {comments.length > 0 ? (\r\n                    <ul>\r\n                        {comments.map((comment, index) => (\r\n                            <li key={index}>\r\n                                <strong>{comment.name}</strong>: {comment.comment} <br />\r\n                                <small>{comment.date} {comment.time}</small>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No comments found.</p>\r\n                )}\r\n            </div>\r\n            <div className=\"add-comment-section\">\r\n                <textarea \r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Add comment\"\r\n                />\r\n                <button onClick={handleAddComment}>Add Comment</button>\r\n            </div>\r\n\r\n            {/* Chat Box Section */}\r\n            <div className=\"chat-section\">\r\n                <h3>Chat</h3>\r\n                <div className=\"chat-messages\">\r\n                    {chatMessages.length > 0 ? (\r\n                        <ul>\r\n                            {chatMessages.map((msg, index) => (\r\n                                <li key={index}>\r\n                                    <strong>{msg.sender}</strong>: {msg.content} <br />\r\n                                    <small>{msg.date} {msg.time}</small>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No messages yet.</p>\r\n                    )}\r\n                </div>\r\n                <textarea \r\n                    value={newChatMessage}\r\n                    onChange={(e) => setNewChatMessage(e.target.value)}\r\n                    placeholder=\"Type your message here...\"\r\n                />\r\n                <button onClick={handleSendChatMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Collaborative;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}