{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\editor\\\\CollaborativeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport '../../CSS/CollaborativeRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collaborative = () => {\n  _s();\n  const location = useLocation();\n  const {\n    project\n  } = location.state || {};\n  const [id, setId] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const [newChatMessage, setNewChatMessage] = useState(''); // State for new chat message\n  const [chatMessages, setChatMessages] = useState([]); // State for chat messages\n  const username = localStorage.getItem('username');\n  const [stompClient, setStompClient] = useState(null); // State to hold the Stomp client\n\n  useEffect(() => {\n    const createRoom = async () => {\n      // Your existing code for creating a room\n      // ...\n    };\n    const fetchComments = async () => {\n      // Your existing code for fetching comments\n      // ...\n    };\n    createRoom();\n    fetchComments();\n  }, [project]);\n  const connectWebSocket = () => {\n    const socket = new SockJS('http://localhost:8081/app');\n    const stomp = Stomp.over(socket);\n    stomp.connect({}, () => {\n      console.log('Connected to WebSocket');\n\n      // Subscribe to the chat room topic for receiving messages\n      stomp.subscribe(`/topic/room/${id}`, message => {\n        if (message.body) {\n          const receivedMessage = JSON.parse(message.body);\n          setChatMessages(prevMessages => [...prevMessages, {\n            sender: receivedMessage.sender,\n            content: receivedMessage.content,\n            date: new Date().toLocaleDateString(),\n            time: new Date().toLocaleTimeString()\n          }]);\n        }\n      });\n      setStompClient(stomp);\n    }, error => {\n      console.error('Error connecting to WebSocket:', error);\n    });\n  };\n  useEffect(() => {\n    if (id) {\n      connectWebSocket(); // Connect to WebSocket when room ID is available\n    }\n    // Cleanup function to disconnect WebSocket on unmount\n    return () => {\n      if (stompClient) {\n        stompClient.disconnect();\n      }\n    };\n  }, [id]);\n  const handleAddComment = async () => {\n    // Your existing code for adding comments\n    // ...\n  };\n  const handleSendChatMessage = () => {\n    if (!stompClient) {\n      alert('Not connected to WebSocket');\n      return;\n    }\n    const chatMessage = {\n      sender: username,\n      content: newChatMessage,\n      type: 'CHAT'\n    };\n\n    // Send the chat message to the WebSocket server\n    stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\n\n    // Optionally, add the chat message locally to the UI\n    setChatMessages(prevMessages => [...prevMessages, {\n      sender: username,\n      content: newChatMessage,\n      date: new Date().toLocaleDateString(),\n      time: new Date().toLocaleTimeString()\n    }]);\n\n    // Clear the input field\n    setNewChatMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collaborative-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-name-box\",\n      children: project ? `Collaborate on project: ${project}` : 'No Project'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"id-box\",\n      children: [loading ? 'Creating room...' : id ? `ID: ${id}` : 'No ID', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), loading ? '' : password ? `Password: ${password}` : 'No Password']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), \": \", comment.comment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [comment.date, \" \", comment.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chatMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this), \": \", msg.content, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [msg.date, \" \", msg.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newChatMessage,\n        onChange: e => setNewChatMessage(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendChatMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(Collaborative, \"6lFpYK7vGKAzSiLBQ4nvqo1JBKc=\", false, function () {\n  return [useLocation];\n});\n_c = Collaborative;\nexport default Collaborative;\nvar _c;\n$RefreshReg$(_c, \"Collaborative\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","SockJS","Stomp","Collaborative","location","project","state","id","setId","password","setPassword","comments","setComments","loading","setLoading","newComment","setNewComment","newChatMessage","setNewChatMessage","chatMessages","setChatMessages","username","localStorage","getItem","stompClient","setStompClient","createRoom","fetchComments","connectWebSocket","socket","stomp","over","connect","console","log","subscribe","message","body","receivedMessage","JSON","parse","prevMessages","sender","content","date","Date","toLocaleDateString","time","toLocaleTimeString","error","disconnect","handleAddComment","handleSendChatMessage","alert","chatMessage","type","send","stringify","length","map","comment","index","name","msg","e","target","value"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/editor/CollaborativeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport '../../CSS/CollaborativeRoom.css';\r\n\r\nconst Collaborative = () => {\r\n    const location = useLocation();\r\n    const { project } = location.state || {};\r\n    const [id, setId] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [newChatMessage, setNewChatMessage] = useState(''); // State for new chat message\r\n    const [chatMessages, setChatMessages] = useState([]); // State for chat messages\r\n    const username = localStorage.getItem('username');\r\n    const [stompClient, setStompClient] = useState(null); // State to hold the Stomp client\r\n\r\n    useEffect(() => {\r\n        const createRoom = async () => {\r\n            // Your existing code for creating a room\r\n            // ...\r\n        };\r\n\r\n        const fetchComments = async () => {\r\n            // Your existing code for fetching comments\r\n            // ...\r\n        };\r\n\r\n        createRoom();\r\n        fetchComments();\r\n    }, [project]);\r\n\r\n    const connectWebSocket = () => {\r\n        const socket = new SockJS('http://localhost:8081/app');\r\n        const stomp = Stomp.over(socket);\r\n\r\n        stomp.connect({}, () => {\r\n            console.log('Connected to WebSocket');\r\n\r\n            // Subscribe to the chat room topic for receiving messages\r\n            stomp.subscribe(`/topic/room/${id}`, (message) => {\r\n                if (message.body) {\r\n                    const receivedMessage = JSON.parse(message.body);\r\n                    setChatMessages((prevMessages) => [\r\n                        ...prevMessages,\r\n                        {\r\n                            sender: receivedMessage.sender,\r\n                            content: receivedMessage.content,\r\n                            date: new Date().toLocaleDateString(),\r\n                            time: new Date().toLocaleTimeString()\r\n                        }\r\n                    ]);\r\n                }\r\n            });\r\n\r\n            setStompClient(stomp);\r\n        }, (error) => {\r\n            console.error('Error connecting to WebSocket:', error);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            connectWebSocket(); // Connect to WebSocket when room ID is available\r\n        }\r\n        // Cleanup function to disconnect WebSocket on unmount\r\n        return () => {\r\n            if (stompClient) {\r\n                stompClient.disconnect();\r\n            }\r\n        };\r\n    }, [id]);\r\n\r\n    const handleAddComment = async () => {\r\n        // Your existing code for adding comments\r\n        // ...\r\n    };\r\n\r\n    const handleSendChatMessage = () => {\r\n        if (!stompClient) {\r\n            alert('Not connected to WebSocket');\r\n            return;\r\n        }\r\n\r\n        const chatMessage = {\r\n            sender: username,\r\n            content: newChatMessage,\r\n            type: 'CHAT'\r\n        };\r\n\r\n        // Send the chat message to the WebSocket server\r\n        stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\r\n\r\n        // Optionally, add the chat message locally to the UI\r\n        setChatMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { sender: username, content: newChatMessage, date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString() }\r\n        ]);\r\n\r\n        // Clear the input field\r\n        setNewChatMessage('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"collaborative-container\">\r\n            <div className=\"project-name-box\">\r\n                {project ? `Collaborate on project: ${project}` : 'No Project'}\r\n            </div>\r\n            <div className=\"id-box\">\r\n                {loading ? 'Creating room...' : id ? `ID: ${id}` : 'No ID'}\r\n                <br />\r\n                {loading ? '' : password ? `Password: ${password}` : 'No Password'}\r\n            </div>\r\n            <div className=\"comments-section\">\r\n                <h3>Comments</h3>\r\n                {comments.length > 0 ? (\r\n                    <ul>\r\n                        {comments.map((comment, index) => (\r\n                            <li key={index}>\r\n                                <strong>{comment.name}</strong>: {comment.comment} <br />\r\n                                <small>{comment.date} {comment.time}</small>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No comments found.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Chat Box Section */}\r\n            <div className=\"chat-section\">\r\n                <h3>Chat</h3>\r\n                <div className=\"chat-messages\">\r\n                    {chatMessages.length > 0 ? (\r\n                        <ul>\r\n                            {chatMessages.map((msg, index) => (\r\n                                <li key={index}>\r\n                                    <strong>{msg.sender}</strong>: {msg.content} <br />\r\n                                    <small>{msg.date} {msg.time}</small>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No messages yet.</p>\r\n                    )}\r\n                </div>\r\n                <textarea \r\n                    value={newChatMessage}\r\n                    onChange={(e) => setNewChatMessage(e.target.value)}\r\n                    placeholder=\"Type your message here...\"\r\n                />\r\n                <button onClick={handleSendChatMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Collaborative;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}