{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\editor\\\\CreateSession.js\",\n  _s = $RefreshSig$();\n// src/components/CreateSession.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../CSS/CreateSession.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSession = () => {\n  _s();\n  const [projectType, setProjectType] = useState('');\n  const navigate = useNavigate();\n  const handleProjectSelection = () => {\n    // Navigate to the appropriate route based on the selected project type\n    if (projectType === 'new') {\n      navigate('/create-new-project'); // Navigate to New Project component\n    } else if (projectType === 'existing') {\n      navigate('/select-existing-project'); // Navigate to Existing Project component\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-session-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"project-button\",\n        onClick: () => setProjectType('new'),\n        children: \"New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"project-button\",\n        onClick: () => setProjectType('existing'),\n        children: \"Existing Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), projectType && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"You selected: \", projectType === 'new' ? 'New Project' : 'Existing Project']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"proceed-button\",\n        onClick: handleProjectSelection,\n        children: \"Proceed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateSession, \"qv1P8Oev4yNCXdukWbgi/2VdGHA=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateSession;\nexport default CreateSession;\nvar _c;\n$RefreshReg$(_c, \"CreateSession\");","map":{"version":3,"names":["React","useState","useNavigate","CreateSession","projectType","setProjectType","navigate","handleProjectSelection"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/editor/CreateSession.js"],"sourcesContent":["// src/components/CreateSession.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../CSS/CreateSession.css'; // Import the CSS file\r\n\r\nconst CreateSession = () => {\r\n    const [projectType, setProjectType] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleProjectSelection = () => {\r\n        // Navigate to the appropriate route based on the selected project type\r\n        if (projectType === 'new') {\r\n            navigate('/create-new-project'); // Navigate to New Project component\r\n        } else if (projectType === 'existing') {\r\n            navigate('/select-existing-project'); // Navigate to Existing Project component\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-session-container\">\r\n            <h2>Create New Session</h2>\r\n            <div className=\"project-selection\">\r\n                <button className=\"project-button\" onClick={() => setProjectType('new')}>New Project</button>\r\n                <button className=\"project-button\" onClick={() => setProjectType('existing')}>Existing Project</button>\r\n            </div>\r\n            {projectType && (\r\n                <div className=\"selected-project\">\r\n                    <h4>You selected: {projectType === 'new' ? 'New Project' : 'Existing Project'}</h4>\r\n                    <button className=\"proceed-button\" onClick={handleProjectSelection}>Proceed</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateSession;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,6BAA6B,CAAC,CAAC;AAAA;AAEtC,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMK,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAMK,sBAAsB,GAAG,MAAM;IACjC;IACA,IAAIH,WAAW,KAAK,KAAK,EAAE;MACvBE,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACrC,CAAC,MAAM,IAAIF,WAAW,KAAK,UAAU,EAAE;MACnCE,QAAQ,CAAC,0BAA0B,CAAC,CAAC,CAAC;IAC1C;EACJ,CAAC;;EAED,oBACI;IAAK,SAAS,EAAC,0BAA0B;IAAA,wBACrC;MAAA,UAAI;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3B;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAC9B;QAAQ,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAE,MAAMD,cAAc,CAAC,KAAK,CAAE;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS,eAC7F;QAAQ,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAE,MAAMA,cAAc,CAAC,UAAU,CAAE;QAAA,UAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrG,EACLD,WAAW,iBACR;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC7B;QAAA,WAAI,gBAAc,EAACA,WAAW,KAAK,KAAK,GAAG,aAAa,GAAG,kBAAkB;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACnF;QAAQ,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAEG,sBAAuB;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAE3F;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GA5BIJ,aAAa;EAAA,QAEED,WAAW;AAAA;AAAA,KAF1BC,aAAa;AA8BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}