{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\editor\\\\CollaborativeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport '../../CSS/CollaborativeRoom.css';\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\nimport atyponLogo from '../../../src/atypon-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collaborative = () => {\n  _s();\n  const location = useLocation();\n  const {\n    project\n  } = location.state || {};\n  const [id, setId] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const [newChatMessage, setNewChatMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [projectCode, setProjectCode] = useState('');\n  const username = localStorage.getItem('username');\n  const [stompClient, setStompClient] = useState(null);\n  const [version, setVersion] = useState('');\n  const [executionOutput, setExecutionOutput] = useState('');\n  const [versions, setVersions] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedVersion, setSelectedVersion] = useState('');\n  useEffect(() => {\n    const createRoom = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        alert('Session expired. Please log in again.');\n        return;\n      }\n      setAuthHeader(token);\n      try {\n        console.log(\"Creating room...\");\n        const response = await request('post', '/room/create');\n        console.log(\"Response received:\", response);\n        if (response && response.data) {\n          const {\n            password,\n            roomId\n          } = response.data;\n          console.log(`Room created with ID: ${roomId}, Password: ${password}`);\n          setId(roomId);\n          setPassword(password);\n        } else {\n          console.error('Unexpected response format:', response);\n          setId(null);\n          setPassword(null);\n        }\n      } catch (error) {\n        console.error('Error creating room:', error);\n        setId(null);\n        setPassword(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchComments = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        alert('Session expired. Please log in again.');\n        return;\n      }\n      setAuthHeader(token);\n      try {\n        console.log(\"Fetching project ID...\");\n        const projectResponse = await request('GET', '/project/getId', {\n          project_name: project\n        });\n        console.log(\"Project ID response:\", projectResponse);\n        const projectId = projectResponse.data.id;\n        console.log(\"Fetching comments...\");\n        const commentsResponse = await request('GET', '/comment/read', {\n          project_id: projectId\n        });\n        console.log(\"Comments response:\", commentsResponse);\n        if (commentsResponse && commentsResponse.data && commentsResponse.data.comments) {\n          setComments(commentsResponse.data.comments);\n        } else {\n          console.error('No comments found:', commentsResponse);\n          setComments([]);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n        setComments([]);\n      }\n    };\n    fetchProjectCode();\n    createRoom();\n    fetchComments();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [project]);\n  useEffect(() => {\n    if (id) {\n      const socket = new SockJS('http://localhost:8082/app');\n      const stomp = Stomp.over(socket);\n      stomp.connect({}, frame => {\n        console.log('Connected to WebSocket:', frame);\n        const chatMessage = {\n          sender: username,\n          password: password\n        };\n        stomp.send(`/app/chat.addUser/${id}`, {}, JSON.stringify(chatMessage));\n        stomp.subscribe(`/topic/room/${id}`, message => {\n          if (message.body) {\n            const receivedMessage = JSON.parse(message.body);\n            setChatMessages(prevMessages => [...prevMessages, {\n              sender: receivedMessage.sender,\n              content: receivedMessage.content,\n              time: new Date().toLocaleTimeString()\n            }]);\n          }\n        });\n        stomp.subscribe(`/topic/users/${id}`, message => {\n          if (message.body) {\n            const userUpdate = JSON.parse(message.body);\n            setUsers(userUpdate.users);\n          }\n        });\n        setStompClient(stomp);\n      }, error => {\n        console.error('Error connecting to WebSocket:', error);\n      });\n      return () => {\n        stomp.disconnect();\n      };\n    }\n  }, [id, password, username]);\n  const handleAddComment = async () => {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    try {\n      const userIdResponse = await request('GET', '/editor/getId', {\n        editorName: username\n      });\n      const userId = userIdResponse.data;\n      const projectResponse = await request('GET', '/project/getId', {\n        project_name: project\n      });\n      const projectId = projectResponse.data.id;\n      const commentBody = {\n        comment: newComment,\n        project_id: projectId\n      };\n      await request('POST', `/comment/post?userID=${userId}`, commentBody);\n      setComments(prevComments => [...prevComments, {\n        name: username,\n        comment: newComment,\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString()\n      }]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      alert('Failed to add comment. Please try again.');\n    }\n  };\n  const handleSendChatMessage = () => {\n    if (!stompClient) {\n      alert('Not connected to WebSocket');\n      return;\n    }\n    const chatMessage = {\n      sender: username,\n      content: newChatMessage,\n      type: 'CHAT'\n    };\n    stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\n    setNewChatMessage('');\n  };\n  const handleUserClick = user => {\n    console.log(`User clicked: ${user}`);\n  };\n  const handleSaveCode = async () => {\n    const requestBody = {\n      code: projectCode,\n      version: version\n    };\n    try {\n      const response = await request('POST', 'project/edit?projectName=' + project, requestBody);\n      console.log('Code saved successfully:', response.data);\n      alert('Code saved successfully!');\n      fetchProjectCode();\n    } catch (error) {\n      console.error('Error saving code:', error);\n      // Handle the error (e.g., show an error message to the user)\n      alert('Error saving code. Please try again.');\n    }\n  };\n  const fetchProjectCode = async () => {\n    const token = localStorage.getItem('auth_token');\n\n    // Check if the token exists in localStorage\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n\n    // Set the authorization header (assuming setAuthHeader is defined elsewhere)\n    setAuthHeader(token);\n    try {\n      console.log(\"Fetching project code...\");\n\n      // Make the GET request to fetch the project code\n      const response = await request('GET', '/project/getCode', {\n        project_name: project\n      });\n      console.log(\"Project code response:\", response);\n\n      // Check if the response contains the data object\n      if (response && response.data) {\n        // Set the project code and version in the state\n        setProjectCode(response.data.code);\n        setVersion(response.data.version);\n\n        // Notify the user of successful code fetch\n        alert('Project code fetched successfully!');\n      } else {\n        console.error('Code not found:', response);\n        setProjectCode(''); // Clear the project code state if not found\n      }\n    } catch (error) {\n      console.error('Error fetching project code:', error);\n      setProjectCode(''); // Clear the project code in case of an error\n    }\n  };\n\n  const handleExecuteCode = async () => {\n    const requestBody = {\n      code: projectCode,\n      className: project\n    };\n    const language = 'java';\n    try {\n      const response = await request('POST', '/project/execute?language=' + language, requestBody);\n      console.log('Code executed successfully:', response.data);\n      setExecutionOutput(response.data);\n    } catch (error) {\n      console.error('Error executing code:', error);\n      setExecutionOutput('Error executing code: ' + error.message);\n    }\n  };\n  const handleFetchVersions = async () => {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    try {\n      const response = await request('GET', `/project/${project}/versions`);\n      console.log(\"Fetched versions:\", response);\n      const versionsList = response.data;\n      if (versionsList && Array.isArray(versionsList)) {\n        setVersions(versionsList);\n        setShowDropdown(true);\n      } else {\n        alert('No versions found for the project.');\n      }\n    } catch (error) {\n      console.error('Error fetching versions:', error);\n      alert('Failed to fetch versions. Please try again.');\n    }\n  };\n  const handleVersionChange = event => {\n    const version = event.target.value;\n    setSelectedVersion(version);\n    console.log('Selected version:', version);\n  };\n  const handleRevertVersion = async () => {\n    if (!selectedVersion) {\n      alert('Please select a version to revert.');\n      return;\n    }\n    try {\n      const projectResponse = await request('GET', '/project/getId', {\n        project_name: project\n      });\n      const projectId = projectResponse.data.id;\n      const requestBody = {\n        projectId: projectId,\n        old_version: selectedVersion\n      };\n      const response = await request('POST', `/project/revert?projectName=${project}`, requestBody);\n      console.log('Revert response:', response.data);\n      alert(`Project reverted to version ${selectedVersion}`);\n\n      // Notify through WebSocket that the version has been reverted\n      const wsMessage = {\n        type: 'REVERT_NOTIFICATION',\n        message: `Project ${project} has been successfully reverted to version ${selectedVersion}`,\n        projectId: projectId,\n        version: selectedVersion\n      };\n      if (stompClient && stompClient.connected) {\n        stompClient.send(`/app/revert.notify/${id}`, {}, JSON.stringify(wsMessage));\n        console.log('Revert notification sent via WebSocket');\n      } else {\n        console.warn('WebSocket connection is not open.');\n      }\n      fetchProjectCode(); // Fetch the updated project code after revert\n    } catch (error) {\n      console.error('Error reverting version:', error);\n      alert('Failed to revert version. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collaborative-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: atyponLogo,\n        alt: \"AtYpon Logo\",\n        className: \"atypon-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Users in Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), users.length > 0 ? users.map((user, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserClick(user),\n        children: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-users-message\",\n        children: \"No users online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-name-box\",\n      children: project ? `Collaborate on project: ${project}` : 'No Project'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"id-box\",\n      children: [loading ? 'Creating room...' : id ? `ID: ${id}` : 'No ID', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this), loading ? '' : password ? `Password: ${password}` : 'No Password']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 33\n          }, this), \": \", comment.comment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [comment.date, \" \", comment.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"styled-textarea\",\n        value: projectCode || '',\n        onChange: e => {\n          setProjectCode(e.target.value);\n        },\n        rows: 20,\n        cols: 100,\n        spellCheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: handleSaveCode,\n      children: \"Save Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"run-button\",\n      onClick: handleExecuteCode,\n      children: \"Run Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"execution-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Execution Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: executionOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"revert-button\",\n        onClick: handleFetchVersions,\n        children: \"Revert Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fetch-code\",\n        onClick: fetchProjectCode,\n        children: \"Fetch Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 13\n      }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"version-dropdown\",\n          value: selectedVersion,\n          onChange: handleVersionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this), versions.map((version, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: version,\n            children: version\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"revert-button-v2\",\n          onClick: handleRevertVersion,\n          children: \"Revert Version\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chatMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this), \": \", msg.content, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [msg.date, \" \", msg.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newChatMessage,\n        onChange: e => setNewChatMessage(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendChatMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 9\n  }, this);\n};\n_s(Collaborative, \"W69HGP6wbmMVJE4kyVDHAQg8Vog=\", false, function () {\n  return [useLocation];\n});\n_c = Collaborative;\nexport default Collaborative;\nvar _c;\n$RefreshReg$(_c, \"Collaborative\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","SockJS","Stomp","request","setAuthHeader","atyponLogo","Collaborative","location","project","state","id","setId","password","setPassword","comments","setComments","loading","setLoading","newComment","setNewComment","newChatMessage","setNewChatMessage","chatMessages","setChatMessages","users","setUsers","projectCode","setProjectCode","username","localStorage","getItem","stompClient","setStompClient","version","setVersion","executionOutput","setExecutionOutput","versions","setVersions","showDropdown","setShowDropdown","selectedVersion","setSelectedVersion","createRoom","token","alert","console","log","response","data","roomId","error","fetchComments","projectResponse","project_name","projectId","commentsResponse","project_id","fetchProjectCode","socket","stomp","over","connect","frame","chatMessage","sender","send","JSON","stringify","subscribe","message","body","receivedMessage","parse","prevMessages","content","time","Date","toLocaleTimeString","userUpdate","disconnect","handleAddComment","userIdResponse","editorName","userId","commentBody","comment","prevComments","name","date","toLocaleDateString","handleSendChatMessage","type","handleUserClick","user","handleSaveCode","requestBody","code","handleExecuteCode","className","language","handleFetchVersions","versionsList","Array","isArray","handleVersionChange","event","target","value","handleRevertVersion","old_version","wsMessage","connected","warn","color","length","map","index","e","msg"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/editor/CollaborativeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport '../../CSS/CollaborativeRoom.css'; \r\nimport { request, setAuthHeader } from '../../helpers/axios_helper'; \r\nimport atyponLogo from '../../../src/atypon-logo.png'; \r\n\r\nconst Collaborative = () => {\r\n    const location = useLocation();\r\n    const { project } = location.state || {};\r\n    const [id, setId] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [newChatMessage, setNewChatMessage] = useState('');\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [projectCode, setProjectCode] = useState(''); \r\n    const username = localStorage.getItem('username');\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [version, setVersion] = useState(''); \r\n    const [executionOutput, setExecutionOutput] = useState(''); \r\n    const [versions, setVersions] = useState([]); \r\n    const [showDropdown, setShowDropdown] = useState(false); \r\n    const [selectedVersion, setSelectedVersion] = useState(''); \r\n\r\n    useEffect(() => {\r\n        const createRoom = async () => {\r\n            const token = localStorage.getItem('auth_token');\r\n            if (!token) {\r\n                alert('Session expired. Please log in again.');\r\n                return;\r\n            }\r\n\r\n            setAuthHeader(token);\r\n\r\n            try {\r\n                console.log(\"Creating room...\");\r\n                const response = await request('post', '/room/create');\r\n                console.log(\"Response received:\", response);\r\n\r\n                if (response && response.data) {\r\n                    const { password, roomId } = response.data;\r\n                    console.log(`Room created with ID: ${roomId}, Password: ${password}`);\r\n                    setId(roomId);\r\n                    setPassword(password);\r\n                } else {\r\n                    console.error('Unexpected response format:', response);\r\n                    setId(null);\r\n                    setPassword(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error creating room:', error);\r\n                setId(null);\r\n                setPassword(null);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        const fetchComments = async () => {\r\n            const token = localStorage.getItem('auth_token');\r\n            if (!token) {\r\n                alert('Session expired. Please log in again.');\r\n                return;\r\n            }\r\n\r\n            setAuthHeader(token);\r\n\r\n            try {\r\n                console.log(\"Fetching project ID...\");\r\n                const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n                console.log(\"Project ID response:\", projectResponse);\r\n\r\n                const projectId = projectResponse.data.id;\r\n\r\n                console.log(\"Fetching comments...\");\r\n                const commentsResponse = await request('GET', '/comment/read', { project_id: projectId });\r\n                console.log(\"Comments response:\", commentsResponse);\r\n\r\n                if (commentsResponse && commentsResponse.data && commentsResponse.data.comments) {\r\n                    setComments(commentsResponse.data.comments);\r\n                } else {\r\n                    console.error('No comments found:', commentsResponse);\r\n                    setComments([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error);\r\n                setComments([]);\r\n            }\r\n        };\r\n        fetchProjectCode(); \r\n        createRoom();\r\n        fetchComments();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [project]);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const socket = new SockJS('http://localhost:8082/app');\r\n            const stomp = Stomp.over(socket);\r\n    \r\n            stomp.connect({}, (frame) => {\r\n                console.log('Connected to WebSocket:', frame);\r\n    \r\n                const chatMessage = {\r\n                    sender: username,\r\n                    password: password,\r\n                };\r\n                stomp.send(`/app/chat.addUser/${id}`, {}, JSON.stringify(chatMessage));\r\n    \r\n                stomp.subscribe(`/topic/room/${id}`, (message) => {\r\n                    if (message.body) {\r\n                        const receivedMessage = JSON.parse(message.body);\r\n                        setChatMessages((prevMessages) => [\r\n                            ...prevMessages,\r\n                            {\r\n                                sender: receivedMessage.sender,\r\n                                content: receivedMessage.content,\r\n                                time: new Date().toLocaleTimeString(),\r\n                            },\r\n                        ]);\r\n                    }\r\n                });\r\n    \r\n                stomp.subscribe(`/topic/users/${id}`, (message) => {\r\n                    if (message.body) {\r\n                        const userUpdate = JSON.parse(message.body);\r\n                        setUsers(userUpdate.users);\r\n                    }\r\n                });\r\n    \r\n                setStompClient(stomp);\r\n            }, (error) => {\r\n                console.error('Error connecting to WebSocket:', error);\r\n            });\r\n    \r\n            return () => {\r\n                stomp.disconnect();\r\n            };\r\n        }\r\n    }, [id, password, username]);\r\n    \r\n    const handleAddComment = async () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n\r\n        setAuthHeader(token);\r\n\r\n        try {\r\n            const userIdResponse = await request('GET', '/editor/getId', { editorName: username });\r\n            const userId = userIdResponse.data;\r\n\r\n            const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n            const projectId = projectResponse.data.id;\r\n\r\n            const commentBody = {\r\n                comment: newComment,\r\n                project_id: projectId\r\n            };\r\n\r\n            await request('POST', `/comment/post?userID=${userId}`, commentBody);\r\n\r\n            setComments((prevComments) => [\r\n                ...prevComments,\r\n                { name: username, comment: newComment, date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString() }\r\n            ]);\r\n\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n            alert('Failed to add comment. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleSendChatMessage = () => {\r\n        if (!stompClient) {\r\n            alert('Not connected to WebSocket');\r\n            return;\r\n        }\r\n\r\n        const chatMessage = {\r\n            sender: username,\r\n            content: newChatMessage,\r\n            type: 'CHAT'\r\n        };\r\n\r\n        stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\r\n\r\n        setNewChatMessage('');\r\n    };\r\n\r\n    const handleUserClick = (user) => {\r\n        console.log(`User clicked: ${user}`);\r\n    };\r\n\r\n    const handleSaveCode = async () => {\r\n        const requestBody = {\r\n            code: projectCode, \r\n            version: version, \r\n        };\r\n    \r\n        try {\r\n            const response = await request('POST', 'project/edit?projectName=' + project, requestBody);\r\n            console.log('Code saved successfully:', response.data);\r\n    \r\n            alert('Code saved successfully!');\r\n            fetchProjectCode();\r\n        } catch (error) {\r\n            console.error('Error saving code:', error);\r\n            // Handle the error (e.g., show an error message to the user)\r\n            alert('Error saving code. Please try again.');\r\n        }\r\n    };\r\n    const fetchProjectCode = async () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        \r\n        // Check if the token exists in localStorage\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n    \r\n        // Set the authorization header (assuming setAuthHeader is defined elsewhere)\r\n        setAuthHeader(token);\r\n    \r\n        try {\r\n            console.log(\"Fetching project code...\");\r\n    \r\n            // Make the GET request to fetch the project code\r\n            const response = await request('GET', '/project/getCode', { project_name: project });\r\n    \r\n            console.log(\"Project code response:\", response);\r\n    \r\n            // Check if the response contains the data object\r\n            if (response && response.data) {\r\n                // Set the project code and version in the state\r\n                setProjectCode(response.data.code);\r\n                setVersion(response.data.version);\r\n                \r\n                // Notify the user of successful code fetch\r\n                alert('Project code fetched successfully!');\r\n            } else {\r\n                console.error('Code not found:', response);\r\n                setProjectCode(''); // Clear the project code state if not found\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching project code:', error);\r\n            setProjectCode(''); // Clear the project code in case of an error\r\n        }\r\n    };\r\n    \r\n    const handleExecuteCode = async () => {\r\n        const requestBody = {\r\n            code: projectCode, \r\n            className: project, \r\n        };\r\n\r\n        const language = 'java'; \r\n\r\n        try {\r\n            const response = await request('POST', '/project/execute?language=' + language, requestBody);\r\n            console.log('Code executed successfully:', response.data);\r\n            setExecutionOutput(response.data); \r\n        } catch (error) {\r\n            console.error('Error executing code:', error);\r\n            setExecutionOutput('Error executing code: ' + error.message); \r\n        }\r\n    };\r\n\r\n    const handleFetchVersions = async () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n    \r\n        setAuthHeader(token);\r\n    \r\n        try {\r\n            const response = await request('GET', `/project/${project}/versions`);\r\n            console.log(\"Fetched versions:\", response);\r\n    \r\n            const versionsList = response.data; \r\n            \r\n            if (versionsList && Array.isArray(versionsList)) {\r\n                setVersions(versionsList); \r\n                setShowDropdown(true); \r\n            } else {\r\n                alert('No versions found for the project.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching versions:', error);\r\n            alert('Failed to fetch versions. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleVersionChange = (event) => {\r\n        const version = event.target.value;\r\n        setSelectedVersion(version); \r\n        console.log('Selected version:', version);\r\n    };\r\n\r\n    const handleRevertVersion = async () => {\r\n        if (!selectedVersion) {\r\n            alert('Please select a version to revert.');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n            const projectId = projectResponse.data.id;\r\n    \r\n            const requestBody = {\r\n                projectId: projectId,\r\n                old_version: selectedVersion,\r\n            };\r\n    \r\n            const response = await request('POST', `/project/revert?projectName=${project}`, requestBody);\r\n    \r\n            console.log('Revert response:', response.data);\r\n            alert(`Project reverted to version ${selectedVersion}`);\r\n    \r\n            // Notify through WebSocket that the version has been reverted\r\n            const wsMessage = {\r\n                type: 'REVERT_NOTIFICATION',\r\n                message: `Project ${project} has been successfully reverted to version ${selectedVersion}`,\r\n                projectId: projectId,\r\n                version: selectedVersion,\r\n            };\r\n    \r\n            if (stompClient && stompClient.connected) {\r\n                stompClient.send(`/app/revert.notify/${id}`, {}, JSON.stringify(wsMessage));\r\n                console.log('Revert notification sent via WebSocket');\r\n            } else {\r\n                console.warn('WebSocket connection is not open.');\r\n            }\r\n    \r\n            fetchProjectCode(); // Fetch the updated project code after revert\r\n        } catch (error) {\r\n            console.error('Error reverting version:', error);\r\n            alert('Failed to revert version. Please try again.');\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"collaborative-container\">\r\n            <div className=\"logo-container\">\r\n                <img src={atyponLogo} alt=\"AtYpon Logo\" className=\"atypon-logo\" />\r\n            </div>\r\n\r\n            <div className=\"user-list-section\">\r\n                <h3 style={{ color: 'white' }}>Users in Room</h3>\r\n                {users.length > 0 ? (\r\n                    users.map((user, index) => (\r\n                        <button\r\n                            key={index}\r\n                            className=\"user-button\"\r\n                            onClick={() => handleUserClick(user)}\r\n                        >\r\n                            {user}\r\n                        </button>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"no-users-message\">No users online</p> \r\n                )}\r\n            </div>\r\n\r\n            <div className=\"project-name-box\">\r\n                {project ? `Collaborate on project: ${project}` : 'No Project'}\r\n            </div>\r\n            <div className=\"id-box\">\r\n                {loading ? 'Creating room...' : id ? `ID: ${id}` : 'No ID'}\r\n                <br />\r\n                {loading ? '' : password ? `Password: ${password}` : 'No Password'}\r\n            </div>\r\n            <div className=\"comments-section\">\r\n                <h3>Comments</h3>\r\n                {comments.length > 0 ? (\r\n                    <ul>\r\n                        {comments.map((comment, index) => (\r\n                            <li key={index}>\r\n                                <strong>{comment.name}</strong>: {comment.comment} <br />\r\n                                <small>{comment.date} {comment.time}</small>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No comments found.</p>\r\n                )}\r\n            </div>\r\n            <div className=\"add-comment-section\">\r\n                <textarea \r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Add comment\"\r\n                />\r\n                <button onClick={handleAddComment}>Add Comment</button>\r\n            </div>\r\n            <div className=\"code-container\">\r\n                <textarea\r\n                    className=\"styled-textarea\"\r\n                    value={projectCode || ''} \r\n                    onChange={(e) => {setProjectCode(e.target.value)} }\r\n                    rows={20} \r\n                    cols={100} \r\n                    spellCheck=\"false\" \r\n                />\r\n                </div>\r\n                <button className=\"save-button\" onClick={handleSaveCode}>Save Code</button>\r\n   \r\n                <button className=\"run-button\" onClick={handleExecuteCode}>Run Code</button>\r\n                <div className=\"execution-output\">\r\n                <h3>Execution Output:</h3>\r\n                <pre>{executionOutput}</pre>\r\n                </div>\r\n                <div>\r\n            <button className=\"revert-button\" onClick={handleFetchVersions}>\r\n                Revert Version\r\n            </button>\r\n            <button className=\"fetch-code\" onClick={fetchProjectCode}>\r\n                Fetch Code\r\n            </button>\r\n            {showDropdown && (\r\n                <div>\r\n                    <select\r\n                        className=\"version-dropdown\"\r\n                        value={selectedVersion}\r\n                        onChange={handleVersionChange} \r\n                    >\r\n                        <option value=\"\">Select a version</option>\r\n                        {versions.map((version, index) => (\r\n                            <option key={index} value={version}>\r\n                                {version}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <button className=\"revert-button-v2\" onClick={handleRevertVersion}>\r\n                Revert Version\r\n            </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n            <div className=\"chat-section\">\r\n                <h3>Chat</h3>\r\n                <div className=\"chat-messages\">\r\n                    {chatMessages.length > 0 ? (\r\n                        <ul>\r\n                            {chatMessages.map((msg, index) => (\r\n                                <li key={index}>\r\n                                    <strong>{msg.sender}</strong>: {msg.content} <br />\r\n                                    <small>{msg.date} {msg.time}</small>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No messages yet.</p>\r\n                    )}\r\n                </div>\r\n                <textarea \r\n                    value={newChatMessage}\r\n                    onChange={(e) => setNewChatMessage(e.target.value)}\r\n                    placeholder=\"Type your message here...\"\r\n                />\r\n                <button onClick={handleSendChatMessage}>Send</button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Collaborative;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}