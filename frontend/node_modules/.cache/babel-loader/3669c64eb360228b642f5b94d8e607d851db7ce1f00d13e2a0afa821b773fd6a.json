{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\viewer\\\\ViewerContent.js\",\n  _s = $RefreshSig$();\n// src/components/viewer/ViewerContent.js\nimport React, { useState, useEffect } from 'react';\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewerContent = () => {\n  _s();\n  const [projectType, setProjectType] = useState('');\n  const [click, setclicke] = useState('');\n  const [languages, setLanguages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  useEffect(() => {\n    if (projectType) {\n      fetchLanguages();\n    }\n  }, [projectType]);\n  const fetchLanguages = async () => {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    setLoading(true);\n    try {\n      console.log(\"Fetching languages...\");\n      const response = await request('GET', '/project/languages');\n      console.log(\"Response received:\", response);\n      if (response && response.data && typeof response.data === 'object') {\n        const languagesList = Object.values(response.data);\n        setLanguages(languagesList);\n        console.log(\"Languages set:\", languagesList);\n      } else {\n        console.error('Unexpected response format:', response);\n        setLanguages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching languages:', error);\n      setLanguages([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLanguageSelection = language => {\n    console.log(`Selected language: ${language}`);\n    if (projectType === 'New') {} else if (projectType === 'Existing') {\n      navigate('/select-existing-project', {\n        state: {\n          language\n        }\n      });\n    }\n  };\n  const colors = ['green-button', 'blue-button', 'red-button', 'yellow-button', 'purple-button', 'orange-button', 'teal-button', 'pink-button', 'brown-button', 'gray-button'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-session-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"project-button\",\n        onClick: () => {\n          setProjectType('Existing');\n          setclicke('Find a Project');\n        },\n        children: \"Existing Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), projectType && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-project\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading languages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this) : languages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" \", click, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-buttons\",\n          children: languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `language-button ${colors[index % colors.length]}`,\n            onClick: () => {\n              localStorage.setItem('language', language);\n              setSelectedLanguage(language);\n              localStorage.setItem('selectedLanguage', selectedLanguage);\n              handleLanguageSelection(language);\n            },\n            children: language\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No languages available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewerContent, \"cpE8iYGIh6rg5sZ4w3l98Gm65gI=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewerContent;\nexport default ViewerContent;\nvar _c;\n$RefreshReg$(_c, \"ViewerContent\");","map":{"version":3,"names":["React","useState","useEffect","request","setAuthHeader","useNavigate","ViewerContent","projectType","setProjectType","click","setclicke","languages","setLanguages","loading","setLoading","selectedLanguage","setSelectedLanguage","navigate","username","localStorage","getItem","fetchLanguages","token","alert","console","log","response","data","languagesList","Object","values","error","handleLanguageSelection","language","state","colors","length","map","index","setItem"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/viewer/ViewerContent.js"],"sourcesContent":["// src/components/viewer/ViewerContent.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { request, setAuthHeader } from '../../helpers/axios_helper'; \r\nimport { useNavigate } from 'react-router-dom';\r\nconst ViewerContent = () => {\r\n  const [projectType, setProjectType] = useState('');\r\n    const [click, setclicke] = useState('');\r\n    const [languages, setLanguages] = useState([]); \r\n    const [loading, setLoading] = useState(false); \r\n    const [selectedLanguage, setSelectedLanguage] = useState('');\r\n    const navigate = useNavigate(); \r\n    const username = localStorage.getItem('username');\r\n\r\n    useEffect(() => {\r\n        if (projectType) {\r\n            fetchLanguages();\r\n        }\r\n    }, [projectType]);\r\n\r\n    const fetchLanguages = async () => {\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n\r\n        setAuthHeader(token);\r\n        setLoading(true);\r\n\r\n        try {\r\n            console.log(\"Fetching languages...\");\r\n            const response = await request('GET', '/project/languages');\r\n            console.log(\"Response received:\", response);\r\n\r\n            if (response && response.data && typeof response.data === 'object') {\r\n                const languagesList = Object.values(response.data); \r\n                setLanguages(languagesList);\r\n                console.log(\"Languages set:\", languagesList);\r\n            } else {\r\n                console.error('Unexpected response format:', response);\r\n                setLanguages([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching languages:', error);\r\n            setLanguages([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    const handleLanguageSelection = (language) => {\r\n        console.log(`Selected language: ${language}`);\r\n\r\n        if (projectType === 'New') {\r\n\r\n        } else if (projectType === 'Existing') {\r\n            navigate('/select-existing-project', { state: { language } }); \r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const colors = [\r\n        'green-button',\r\n        'blue-button',\r\n        'red-button',\r\n        'yellow-button',\r\n        'purple-button',\r\n        'orange-button', \r\n        'teal-button',    \r\n        'pink-button',    \r\n        'brown-button',\r\n        'gray-button'     \r\n    ];\r\n\r\n    return (\r\n        <div className=\"create-session-container\">\r\n            <h2>Choose a Language</h2>\r\n            <div className=\"project-selection\">\r\n                <button className=\"project-button\" onClick={() => {setProjectType('Existing');setclicke('Find a Project')  }}>Existing Project</button>\r\n            </div>\r\n\r\n            {projectType && (\r\n                <div className=\"selected-project\">\r\n                    {loading ? (\r\n                        <p>Loading languages...</p>\r\n                    ) : languages.length > 0 ? (\r\n                        <div className=\"language-list\">\r\n                            <h4> {click} </h4>\r\n                            <div className=\"language-buttons\">\r\n                                {languages.map((language, index) => (\r\n                                    <button \r\n                                        key={index} \r\n                                        className={`language-button ${colors[index % colors.length]}`} \r\n                                        onClick={() =>{\r\n                                            localStorage.setItem('language', language); \r\n                                            setSelectedLanguage(language); \r\n                                            localStorage.setItem('selectedLanguage', selectedLanguage); \r\n                                            handleLanguageSelection(language);}}\r\n                                    >\r\n                                        {language}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <p>No languages available.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewerContent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}