{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\viewer\\\\SelectProject.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\nimport '../../CSS/SelectExistingProject.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SelectProject = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const language = localStorage.getItem('language');\n  useEffect(() => {\n    if (language) {\n      fetchProjects();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [language]);\n  const fetchProjects = async () => {\n    setLoading(true);\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    try {\n      console.log(\"Fetching projects for language:\", language);\n      const response = await request('GET', `/project?language=${language}`);\n      console.log(\"Response received:\", response);\n      setProjects(response.data.projects || []);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Failed to fetch projects.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProjectSelection = project => {\n    localStorage.setItem('language', language);\n    console.log(`Selected project: ${project}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), language ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [language, \" Projects:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), projects.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"project-list\",\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleProjectSelection(project),\n            className: \"project-button\",\n            children: project\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No \", language, \" projects found.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No language selected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectProject, \"NeSY2ABg396egInUxNyrxYmb9/Q=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SelectProject;\nexport default SelectProject;\nvar _c;\n$RefreshReg$(_c, \"SelectProject\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","request","setAuthHeader","SelectProject","location","navigate","projects","setProjects","loading","setLoading","error","setError","language","localStorage","getItem","fetchProjects","token","alert","console","log","response","data","handleProjectSelection","project","setItem","length","map","index"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/viewer/SelectProject.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\r\nimport '../../CSS/SelectExistingProject.css';\r\n\r\nconst SelectProject = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [projects, setProjects] = useState([]); \r\n    const [loading, setLoading] = useState(false); \r\n    const [error, setError] = useState(null);\r\n    const language = localStorage.getItem('language');\r\n\r\n    useEffect(() => {\r\n        if (language) {\r\n            fetchProjects();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [language]);\r\n\r\n    const fetchProjects = async () => {\r\n        setLoading(true); \r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n\r\n        setAuthHeader(token); \r\n\r\n        try {\r\n            console.log(\"Fetching projects for language:\", language);\r\n            const response = await request('GET', `/project?language=${language}`); \r\n            console.log(\"Response received:\", response); \r\n            setProjects(response.data.projects || []); \r\n        } catch (error) {\r\n            console.error('Error fetching projects:', error);\r\n            setError('Failed to fetch projects.'); \r\n        } finally {\r\n            setLoading(false); \r\n        }\r\n    };\r\n\r\n    const handleProjectSelection = (project) => {\r\n        localStorage.setItem('language', language);\r\n        console.log(`Selected project: ${project}`);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\"> \r\n            <h2>Select a Project</h2>\r\n            {loading && <p>Loading projects...</p>}\r\n            {error && <p>{error}</p>}\r\n            {language ? (\r\n                <>\r\n                    <p>{language} Projects:</p>\r\n                    {projects.length > 0 ? (\r\n    <ul className=\"project-list\">\r\n        {projects.map((project, index) => (\r\n            <li key={index}> \r\n                <button\r\n                    onClick={() => handleProjectSelection(project)} \r\n                    className=\"project-button\"\r\n                >\r\n                    {project} \r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n) : (\r\n    <p>No {language} projects found.</p>\r\n)}\r\n\r\n\r\n                </>\r\n            ) : (\r\n                <p>No language selected.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectProject;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}