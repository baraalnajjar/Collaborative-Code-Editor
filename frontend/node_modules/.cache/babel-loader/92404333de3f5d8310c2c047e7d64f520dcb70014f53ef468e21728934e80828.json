{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\editor\\\\CreateSession.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../CSS/CreateSession.css';\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSession = () => {\n  _s();\n  const [projectType, setProjectType] = useState('');\n  const [languages, setLanguages] = useState([]); // State to store languages\n  const [loading, setLoading] = useState(false); // State for loading\n  const navigate = useNavigate();\n\n  // Fetch languages from the API when projectType changes\n  useEffect(() => {\n    if (projectType) {\n      fetchLanguages();\n    }\n  }, [projectType]);\n\n  // Custom request function to fetch languages\n  const fetchLanguages = async () => {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token); // Set the authorization header\n    setLoading(true); // Set loading state to true\n\n    try {\n      console.log(\"Fetching languages...\"); // Log before fetching\n      const response = await request('GET', '/project/languages'); // Using your custom request\n      console.log(\"Response received:\", response); // Print the entire response object\n      setLanguages(response.languages); // Assuming response.languages is the array\n    } catch (error) {\n      console.error('Error fetching languages:', error);\n      setLanguages([]); // Reset languages on error\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  const handleProjectSelection = () => {\n    if (projectType === 'new') {\n      navigate('/create-new-project'); // Navigate to New Project component\n    } else if (projectType === 'existing') {\n      navigate('/select-existing-project'); // Navigate to Existing Project component\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-session-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"project-button\",\n        onClick: () => setProjectType('new'),\n        children: \"New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"project-button\",\n        onClick: () => setProjectType('existing'),\n        children: \"Existing Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), projectType && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-project\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading languages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this) : languages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Available Languages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: language\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No languages available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"proceed-button\",\n        onClick: handleProjectSelection,\n        children: \"Proceed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateSession, \"JQY2vKUwJosFoZ8dczk1DOBmvT8=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateSession;\nexport default CreateSession;\nvar _c;\n$RefreshReg$(_c, \"CreateSession\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","request","setAuthHeader","CreateSession","projectType","setProjectType","languages","setLanguages","loading","setLoading","navigate","fetchLanguages","token","localStorage","getItem","alert","console","log","response","error","handleProjectSelection","length","map","language","index"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/editor/CreateSession.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../CSS/CreateSession.css';\r\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\r\n\r\nconst CreateSession = () => {\r\n    const [projectType, setProjectType] = useState('');\r\n    const [languages, setLanguages] = useState([]); // State to store languages\r\n    const [loading, setLoading] = useState(false); // State for loading\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch languages from the API when projectType changes\r\n    useEffect(() => {\r\n        if (projectType) {\r\n            fetchLanguages();\r\n        }\r\n    }, [projectType]);\r\n\r\n    // Custom request function to fetch languages\r\n    const fetchLanguages = async () => {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n          alert('Session expired. Please log in again.');\r\n          return;\r\n      }\r\n\r\n      setAuthHeader(token); // Set the authorization header\r\n      setLoading(true); // Set loading state to true\r\n\r\n      try {\r\n          console.log(\"Fetching languages...\"); // Log before fetching\r\n          const response = await request('GET', '/project/languages'); // Using your custom request\r\n          console.log(\"Response received:\", response); // Print the entire response object\r\n          setLanguages(response.languages); // Assuming response.languages is the array\r\n      } catch (error) {\r\n          console.error('Error fetching languages:', error);\r\n          setLanguages([]); // Reset languages on error\r\n      } finally {\r\n          setLoading(false); // Reset loading state\r\n      }\r\n  };\r\n\r\n    const handleProjectSelection = () => {\r\n        if (projectType === 'new') {\r\n            navigate('/create-new-project'); // Navigate to New Project component\r\n        } else if (projectType === 'existing') {\r\n            navigate('/select-existing-project'); // Navigate to Existing Project component\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-session-container\">\r\n            <h2>Create New Session</h2>\r\n            <div className=\"project-selection\">\r\n                <button className=\"project-button\" onClick={() => setProjectType('new')}>New Project</button>\r\n                <button className=\"project-button\" onClick={() => setProjectType('existing')}>Existing Project</button>\r\n            </div>\r\n\r\n            {projectType && (\r\n                <div className=\"selected-project\">\r\n                    {loading ? (\r\n                        <p>Loading languages...</p>\r\n                    ) : languages.length > 0 ? (\r\n                        <div className=\"language-list\">\r\n                            <h4>Available Languages:</h4>\r\n                            <ul>\r\n                                {languages.map((language, index) => (\r\n                                    <li key={index}>{language}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ) : (\r\n                        <p>No languages available.</p>\r\n                    )}\r\n                    <button className=\"proceed-button\" onClick={handleProjectSelection}>Proceed</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateSession;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}