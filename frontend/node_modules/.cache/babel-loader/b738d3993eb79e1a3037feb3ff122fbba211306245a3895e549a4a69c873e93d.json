{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\editor\\\\LoginForm.js\",\n  _s = $RefreshSig$();\n// src/components/JoinSession.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport '../../CSS/JoinSession.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinSession = () => {\n  _s();\n  const [sessionCode, setSessionCode] = useState(''); // Room ID\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [stompClient, setStompClient] = useState(null);\n  const navigate = useNavigate();\n  const handleJoinSession = e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Create a new SockJS connection and Stomp client\n    const socket = new SockJS('http://localhost:8082/app'); // Update URL as needed\n    const stomp = Stomp.over(socket);\n    stomp.connect({}, frame => {\n      console.log('Connected to WebSocket:', frame);\n\n      // Prepare the chat message\n      const chatMessage = {\n        sender: username,\n        password: password\n      };\n\n      // Send the message to join the session\n      stomp.send(`/app/chat.addUser/${sessionCode}`, {}, JSON.stringify(chatMessage));\n\n      // Subscribe to messages from the room\n      stomp.subscribe(`/topic/room/${sessionCode}`, message => {\n        if (message.body) {\n          const receivedMessage = JSON.parse(message.body);\n          console.log('Received message:', receivedMessage);\n          // Handle received messages here (update state, etc.)\n        }\n      });\n\n      // Subscribe to user updates\n      stomp.subscribe(`/topic/users/${sessionCode}`, message => {\n        if (message.body) {\n          const userUpdate = JSON.parse(message.body);\n          console.log('User update:', userUpdate);\n          // Handle user updates here (update state, etc.)\n        }\n      });\n\n      setStompClient(stomp); // Set the stomp client\n\n      // Navigate to the session view after connecting\n      navigate(`/session/${sessionCode}`);\n    }, error => {\n      console.error('Error connecting to WebSocket:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"join-session-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join a Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleJoinSession,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter session code\",\n        value: sessionCode,\n        onChange: e => setSessionCode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Join Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinSession, \"uKVExOPmv+eHdg53G+CdU3womho=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinSession;\nexport default JoinSession;\nvar _c;\n$RefreshReg$(_c, \"JoinSession\");","map":{"version":3,"names":["React","useState","useNavigate","SockJS","Stomp","JoinSession","sessionCode","setSessionCode","username","setUsername","password","setPassword","stompClient","setStompClient","navigate","handleJoinSession","e","preventDefault","socket","stomp","over","connect","frame","console","log","chatMessage","sender","send","JSON","stringify","subscribe","message","body","receivedMessage","parse","userUpdate","error","target","value"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/editor/LoginForm.js"],"sourcesContent":["// src/components/JoinSession.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport '../../CSS/JoinSession.css';\r\n\r\nconst JoinSession = () => {\r\n  const [sessionCode, setSessionCode] = useState(''); // Room ID\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [stompClient, setStompClient] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleJoinSession = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n\r\n    // Create a new SockJS connection and Stomp client\r\n    const socket = new SockJS('http://localhost:8082/app'); // Update URL as needed\r\n    const stomp = Stomp.over(socket);\r\n\r\n    stomp.connect({}, (frame) => {\r\n      console.log('Connected to WebSocket:', frame);\r\n\r\n      // Prepare the chat message\r\n      const chatMessage = {\r\n        sender: username,\r\n        password: password,\r\n      };\r\n\r\n      // Send the message to join the session\r\n      stomp.send(`/app/chat.addUser/${sessionCode}`, {}, JSON.stringify(chatMessage));\r\n\r\n      // Subscribe to messages from the room\r\n      stomp.subscribe(`/topic/room/${sessionCode}`, (message) => {\r\n        if (message.body) {\r\n          const receivedMessage = JSON.parse(message.body);\r\n          console.log('Received message:', receivedMessage);\r\n          // Handle received messages here (update state, etc.)\r\n        }\r\n      });\r\n\r\n      // Subscribe to user updates\r\n      stomp.subscribe(`/topic/users/${sessionCode}`, (message) => {\r\n        if (message.body) {\r\n          const userUpdate = JSON.parse(message.body);\r\n          console.log('User update:', userUpdate);\r\n          // Handle user updates here (update state, etc.)\r\n        }\r\n      });\r\n\r\n      setStompClient(stomp); // Set the stomp client\r\n\r\n      // Navigate to the session view after connecting\r\n      navigate(`/session/${sessionCode}`);\r\n    }, (error) => {\r\n      console.error('Error connecting to WebSocket:', error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"join-session-container\">\r\n      <h2>Join a Session</h2>\r\n      <form onSubmit={handleJoinSession}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter session code\"\r\n          value={sessionCode}\r\n          onChange={(e) => setSessionCode(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Join Session</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinSession;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}