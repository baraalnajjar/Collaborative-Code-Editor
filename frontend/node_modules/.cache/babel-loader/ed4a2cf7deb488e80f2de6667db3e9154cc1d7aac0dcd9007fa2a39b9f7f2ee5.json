{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\AppContent.js\";\n// src/components/AppContent.js\nimport React from 'react';\nimport WelcomeContent from './WelcomeContent';\nimport AdminContent from './admin/AdminContent'; // Admin-specific content\nimport LoginPage from './LoginPage'; // Import your LoginPage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class AppContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onRoleSelect = role => {\n      if (role === 'admin') {\n        this.setState({\n          componentToShow: 'login'\n        }); // Show login page\n      }\n      // You can add other roles like editor, viewer, etc. here\n    };\n    this.handleLogin = (event, username, password) => {\n      event.preventDefault();\n      // Implement your login logic here\n      // For demonstration, we assume login is always successful\n      console.log(`Logging in as ${username}`);\n      this.setState({\n        isLoggedIn: true,\n        componentToShow: 'admin'\n      }); // Set to admin if login is successful\n    };\n    this.handleBackToHome = () => {\n      this.setState({\n        componentToShow: 'welcome'\n      }); // Go back to welcome\n    };\n    this.state = {\n      componentToShow: 'welcome',\n      // Default to welcome screen\n      isLoggedIn: false // Track login status\n    };\n  }\n\n  render() {\n    const {\n      componentToShow,\n      isLoggedIn\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [componentToShow === 'welcome' && /*#__PURE__*/_jsxDEV(WelcomeContent, {\n        onRoleSelect: this.onRoleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, this), componentToShow === 'login' && /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLogin: this.handleLogin,\n        onBack: this.handleBackToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this), componentToShow === 'admin' && isLoggedIn && /*#__PURE__*/_jsxDEV(AdminContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["React","WelcomeContent","AdminContent","LoginPage","AppContent","Component","constructor","props","onRoleSelect","role","setState","componentToShow","handleLogin","event","username","password","preventDefault","console","log","isLoggedIn","handleBackToHome","state","render"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/AppContent.js"],"sourcesContent":["// src/components/AppContent.js\nimport React from 'react';\nimport WelcomeContent from './WelcomeContent';\nimport AdminContent from './admin/AdminContent';  // Admin-specific content\nimport LoginPage from './LoginPage'; // Import your LoginPage\n\nexport default class AppContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      componentToShow: 'welcome',  // Default to welcome screen\n      isLoggedIn: false, // Track login status\n    };\n  }\n\n  onRoleSelect = (role) => {\n    if (role === 'admin') {\n      this.setState({ componentToShow: 'login' }); // Show login page\n    }\n    // You can add other roles like editor, viewer, etc. here\n  };\n\n  handleLogin = (event, username, password) => {\n    event.preventDefault();\n    // Implement your login logic here\n    // For demonstration, we assume login is always successful\n    console.log(`Logging in as ${username}`);\n    this.setState({ isLoggedIn: true, componentToShow: 'admin' }); // Set to admin if login is successful\n  };\n\n  handleBackToHome = () => {\n    this.setState({ componentToShow: 'welcome' }); // Go back to welcome\n  };\n\n  render() {\n    const { componentToShow, isLoggedIn } = this.state;\n\n    return (\n      <>\n        {componentToShow === 'welcome' && <WelcomeContent onRoleSelect={this.onRoleSelect} />}\n        {componentToShow === 'login' && <LoginPage onLogin={this.handleLogin} onBack={this.handleBackToHome} />}\n        {componentToShow === 'admin' && isLoggedIn && <AdminContent />} \n      </>\n    );\n  }\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,sBAAsB,CAAC,CAAE;AAClD,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA;AAAA;AAErC,eAAe,MAAMC,UAAU,SAASJ,KAAK,CAACK,SAAS,CAAC;EACtDC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAOfC,YAAY,GAAIC,IAAI,IAAK;MACvB,IAAIA,IAAI,KAAK,OAAO,EAAE;QACpB,IAAI,CAACC,QAAQ,CAAC;UAAEC,eAAe,EAAE;QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/C;MACA;IACF,CAAC;IAAA,KAEDC,WAAW,GAAG,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;MAC3CF,KAAK,CAACG,cAAc,EAAE;MACtB;MACA;MACAC,OAAO,CAACC,GAAG,CAAE,iBAAgBJ,QAAS,EAAC,CAAC;MACxC,IAAI,CAACJ,QAAQ,CAAC;QAAES,UAAU,EAAE,IAAI;QAAER,eAAe,EAAE;MAAQ,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC;IAAA,KAEDS,gBAAgB,GAAG,MAAM;MACvB,IAAI,CAACV,QAAQ,CAAC;QAAEC,eAAe,EAAE;MAAU,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAvBC,IAAI,CAACU,KAAK,GAAG;MACXV,eAAe,EAAE,SAAS;MAAG;MAC7BQ,UAAU,EAAE,KAAK,CAAE;IACrB,CAAC;EACH;;EAqBAG,MAAM,GAAG;IACP,MAAM;MAAEX,eAAe;MAAEQ;IAAW,CAAC,GAAG,IAAI,CAACE,KAAK;IAElD,oBACE;MAAA,WACGV,eAAe,KAAK,SAAS,iBAAI,QAAC,cAAc;QAAC,YAAY,EAAE,IAAI,CAACH;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,EACpFG,eAAe,KAAK,OAAO,iBAAI,QAAC,SAAS;QAAC,OAAO,EAAE,IAAI,CAACC,WAAY;QAAC,MAAM,EAAE,IAAI,CAACQ;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,EACtGT,eAAe,KAAK,OAAO,IAAIQ,UAAU,iBAAI,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,gBAC7D;EAEP;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}