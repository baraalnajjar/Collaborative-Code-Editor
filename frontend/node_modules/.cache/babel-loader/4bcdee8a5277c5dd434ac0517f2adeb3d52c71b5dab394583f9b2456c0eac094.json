{"ast":null,"code":"var _jsxFileName = \"D:\\\\myRepositories\\\\Atypon\\\\Final Project\\\\frontend\\\\src\\\\components\\\\editor\\\\CollaborativeUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport '../../CSS/CollaborativeRoom.css';\nimport { request, setAuthHeader } from '../../helpers/axios_helper';\nimport atyponLogo from '../../../src/atypon-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollaborativeUser = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const [newChatMessage, setNewChatMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [projectCode, setProjectCode] = useState('');\n  const [stompClient, setStompClient] = useState(null);\n  const [version, setVersion] = useState('');\n  const [executionOutput, setExecutionOutput] = useState('');\n  const [versions, setVersions] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedVersion, setSelectedVersion] = useState('');\n  const dropdownRef = useRef(null);\n  const username = localStorage.getItem('username');\n  const id = localStorage.getItem('sessionCode');\n  const project = localStorage.getItem('projectName');\n  const password = localStorage.getItem('password');\n  useEffect(() => {\n    const fetchComments = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        alert('Session expired. Please log in again.');\n        return;\n      }\n      setAuthHeader(token);\n      try {\n        console.log(\"Fetching project ID...\");\n        const projectResponse = await request('GET', '/project/getId', {\n          project_name: project\n        });\n        console.log(\"Project ID response:\", projectResponse);\n        const projectId = projectResponse.data.id;\n        console.log(\"Fetching comments...\");\n        const commentsResponse = await request('GET', '/comment/read', {\n          project_id: projectId\n        });\n        console.log(\"Comments response:\", commentsResponse);\n        if (commentsResponse && commentsResponse.data && commentsResponse.data.comments) {\n          setComments(commentsResponse.data.comments);\n        } else {\n          console.error('No comments found:', commentsResponse);\n          setComments([]);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n        setComments([]);\n      }\n    };\n    fetchProjectCode();\n    fetchComments();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [project]);\n  useEffect(() => {\n    if (id) {\n      const socket = new SockJS('http://localhost:8082/app');\n      const stomp = Stomp.over(socket);\n      stomp.connect({}, frame => {\n        console.log('Connected to WebSocket:', frame);\n        const chatMessage = {\n          sender: username,\n          password: password\n        };\n        stomp.send(`/app/chat.addUser/${id}`, {}, JSON.stringify(chatMessage));\n        stomp.subscribe(`/topic/room/${id}`, message => {\n          if (message.body) {\n            const receivedMessage = JSON.parse(message.body);\n            console.log('Received message:', receivedMessage);\n            // Handle received messages here (e.g., update state)\n          }\n        });\n\n        stomp.subscribe(`/topic/users/${id}`, message => {\n          if (message.body) {\n            const userUpdate = JSON.parse(message.body);\n            console.log('User update:', userUpdate);\n            // Handle user updates here (e.g., update state)\n          }\n        });\n\n        setStompClient(stomp); // Store the stomp client for future use\n      }, error => {\n        console.error('Error connecting to WebSocket:', error);\n      });\n    }\n  }, [id, password, username]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setShowDropdown(false); // Hide the dropdown if clicking outside\n      }\n    };\n\n    // Attach the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef]);\n  const handleUserClick = user => {\n    console.log(`User clicked: ${user}`);\n  };\n  const handleAddComment = async () => {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    try {\n      const userIdResponse = await request('GET', '/editor/getId', {\n        editorName: username\n      });\n      const userId = userIdResponse.data;\n      const projectResponse = await request('GET', '/project/getId', {\n        project_name: project\n      });\n      const projectId = projectResponse.data.id;\n      const commentBody = {\n        comment: newComment,\n        project_id: projectId\n      };\n      await request('POST', `/comment/post?userID=${userId}`, commentBody);\n      setComments(prevComments => [...prevComments, {\n        name: username,\n        comment: newComment,\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString()\n      }]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      alert('Failed to add comment. Please try again.');\n    }\n  };\n  const handleSaveCode = async () => {\n    const requestBody = {\n      code: projectCode,\n      version: version,\n      username: username\n    };\n    try {\n      const response = await request('POST', 'project/edit?projectName=' + project, requestBody);\n      console.log('Code saved successfully:', response.data);\n      alert('Code saved successfully!');\n      fetchProjectCode();\n      const chatMessage = {\n        sender: username,\n        content: \"I edited the code, you must fetch!\",\n        type: 'CHAT'\n      };\n      stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\n    } catch (error) {\n      console.error('Error saving code:', error);\n      alert('Error saving code. Please try again.');\n    }\n  };\n  const fetchProjectCode = async () => {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    try {\n      console.log(\"Fetching project code...\");\n      const response = await request('GET', '/project/getCode', {\n        project_name: project\n      });\n      console.log(\"Project code response:\", response);\n      if (response && response.data) {\n        setProjectCode(response.data.code);\n        setVersion(response.data.version);\n        alert('Project code fetched successfully!');\n      } else {\n        console.error('Code not found:', response);\n        setProjectCode(''); // Clear the project code state if not found\n      }\n    } catch (error) {\n      console.error('Error fetching project code:', error);\n      setProjectCode(''); // Clear the project code in case of an error\n    }\n  };\n\n  const handleExecuteCode = async () => {\n    const requestBody = {\n      code: projectCode,\n      className: project\n    };\n    const language = 'java';\n    try {\n      const response = await request('POST', '/project/execute?language=' + language, requestBody);\n      console.log('Code executed successfully:', response.data);\n      setExecutionOutput(response.data);\n    } catch (error) {\n      console.error('Error executing code:', error);\n      setExecutionOutput('Error executing code: ' + error.message);\n    }\n  };\n  const handleFetchVersions = async () => {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      alert('Session expired. Please log in again.');\n      return;\n    }\n    setAuthHeader(token);\n    try {\n      const response = await request('GET', `/project/${project}/versions`);\n      console.log(\"Fetched versions:\", response);\n      const versionsList = response.data;\n      if (versionsList && Array.isArray(versionsList)) {\n        setVersions(versionsList);\n        setShowDropdown(true);\n      } else {\n        alert('No versions found for the project.');\n      }\n    } catch (error) {\n      console.error('Error fetching versions:', error);\n      alert('Failed to fetch versions. Please try again.');\n    }\n  };\n  const handleVersionChange = event => {\n    const version = event.target.value;\n    setSelectedVersion(version);\n    console.log('Selected version:', version);\n  };\n  const handleRevertVersion = async () => {\n    if (!selectedVersion) {\n      alert('Please select a version to revert.');\n      return;\n    }\n    try {\n      const projectResponse = await request('GET', '/project/getId', {\n        project_name: project\n      });\n      const projectId = projectResponse.data.id;\n      const requestBody = {\n        projectId: projectId,\n        old_version: selectedVersion,\n        username: username\n      };\n      const response = await request('POST', `/project/revert?projectName=${project}`, requestBody);\n      console.log('Revert response:', response.data);\n      alert(`Project reverted to version ${selectedVersion}`);\n      fetchProjectCode();\n      const chatMessage = {\n        sender: username,\n        content: \"I Reverted the code, you must fetch!\",\n        type: 'CHAT'\n      };\n      stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\n    } catch (error) {\n      console.error('Error reverting version:', error);\n      alert('Failed to revert version. Please try again.');\n    }\n  };\n  const handleSendChatMessage = () => {\n    if (!stompClient) {\n      alert('Not connected to WebSocket');\n      return;\n    }\n    const chatMessage = {\n      sender: username,\n      content: newChatMessage,\n      type: 'CHAT'\n    };\n    stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\n    setNewChatMessage('');\n  };\n  const colors = ['green-button', 'red-button', 'blue-button', 'yellow-button', 'purple-button', 'orange-button',\n  // New color\n  'teal-button',\n  // New color\n  'pink-button',\n  // New color\n  'brown-button',\n  // New color\n  'gray-button' // New color\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collaborative-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: atyponLogo,\n        alt: \"AtYpon Logo\",\n        className: \"atypon-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Users in Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 5\n      }, this), users.length > 0 ? users.map((user, index) => {\n        const colorClass = colors[Math.floor(Math.random() * colors.length)];\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `user-button ${colorClass}`,\n          onClick: () => handleUserClick(user),\n          children: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-users-message\",\n        children: \"No users online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-name-box\",\n      children: project ? `Collaborate on project: ${project}` : 'No Project'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"id-box\",\n      children: [loading ? 'Joining room...' : id ? `ID: ${id}` : 'No ID', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), loading ? '' : password ? `Password: ${password}` : 'No Password']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 33\n          }, this), \": \", comment.comment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [comment.date, \" \", comment.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"styled-textarea\",\n        value: projectCode || '',\n        onChange: e => {\n          setProjectCode(e.target.value);\n        },\n        rows: 20,\n        cols: 100,\n        spellCheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: handleSaveCode,\n      children: \"Save Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"run-button\",\n      onClick: handleExecuteCode,\n      children: \"Run Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"execution-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Execution Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: executionOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"revert-button\",\n        onClick: handleFetchVersions,\n        children: \"Revert Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fetch-code\",\n        onClick: fetchProjectCode,\n        children: \"Fetch Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"version-dropdown\",\n          value: selectedVersion,\n          onChange: handleVersionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this), versions.map((version, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: version,\n            children: version\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"revert-button-v2\",\n          onClick: handleRevertVersion,\n          children: \"Revert Version\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chatMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 37\n            }, this), \": \", msg.content, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [msg.date, \" \", msg.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newChatMessage,\n        onChange: e => setNewChatMessage(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendChatMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 9\n  }, this);\n};\n_s(CollaborativeUser, \"OCJjmNk9QliQMYn6sdDtM05BvZQ=\");\n_c = CollaborativeUser;\nexport default CollaborativeUser;\nvar _c;\n$RefreshReg$(_c, \"CollaborativeUser\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SockJS","Stomp","request","setAuthHeader","atyponLogo","CollaborativeUser","comments","setComments","loading","newComment","setNewComment","newChatMessage","setNewChatMessage","chatMessages","setChatMessages","users","setUsers","projectCode","setProjectCode","stompClient","setStompClient","version","setVersion","executionOutput","setExecutionOutput","versions","setVersions","showDropdown","setShowDropdown","selectedVersion","setSelectedVersion","dropdownRef","username","localStorage","getItem","id","project","password","fetchComments","token","alert","console","log","projectResponse","project_name","projectId","data","commentsResponse","project_id","error","fetchProjectCode","socket","stomp","over","connect","frame","chatMessage","sender","send","JSON","stringify","subscribe","message","body","receivedMessage","parse","userUpdate","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleUserClick","user","handleAddComment","userIdResponse","editorName","userId","commentBody","comment","prevComments","name","date","Date","toLocaleDateString","time","toLocaleTimeString","handleSaveCode","requestBody","code","response","content","type","handleExecuteCode","className","language","handleFetchVersions","versionsList","Array","isArray","handleVersionChange","value","handleRevertVersion","old_version","handleSendChatMessage","colors","color","length","map","index","colorClass","Math","floor","random","e","msg"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/editor/CollaborativeUser.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport '../../CSS/CollaborativeRoom.css'; \r\nimport { request, setAuthHeader } from '../../helpers/axios_helper'; \r\nimport atyponLogo from '../../../src/atypon-logo.png'; \r\n\r\n\r\nconst CollaborativeUser = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loading] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [newChatMessage, setNewChatMessage] = useState('');\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [projectCode, setProjectCode] = useState(''); \r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [version, setVersion] = useState(''); \r\n    const [executionOutput, setExecutionOutput] = useState(''); \r\n    const [versions, setVersions] = useState([]); \r\n    const [showDropdown, setShowDropdown] = useState(false); \r\n    const [selectedVersion, setSelectedVersion] = useState(''); \r\n    const dropdownRef = useRef(null); \r\n    const username = localStorage.getItem('username');\r\n    const id = localStorage.getItem('sessionCode');\r\n    const project = localStorage.getItem('projectName');\r\n    const password = localStorage.getItem('password');\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchComments = async () => {\r\n            const token = localStorage.getItem('auth_token');\r\n            if (!token) {\r\n                alert('Session expired. Please log in again.');\r\n                return;\r\n            }\r\n\r\n            setAuthHeader(token);\r\n\r\n            try {\r\n                console.log(\"Fetching project ID...\");\r\n                const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n                console.log(\"Project ID response:\", projectResponse);\r\n\r\n                const projectId = projectResponse.data.id;\r\n\r\n                console.log(\"Fetching comments...\");\r\n                const commentsResponse = await request('GET', '/comment/read', { project_id: projectId });\r\n                console.log(\"Comments response:\", commentsResponse);\r\n\r\n                if (commentsResponse && commentsResponse.data && commentsResponse.data.comments) {\r\n                    setComments(commentsResponse.data.comments);\r\n                } else {\r\n                    console.error('No comments found:', commentsResponse);\r\n                    setComments([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error);\r\n                setComments([]);\r\n            }\r\n        };\r\n        fetchProjectCode(); \r\n        fetchComments();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [project]);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const socket = new SockJS('http://localhost:8082/app');\r\n            const stomp = Stomp.over(socket);\r\n\r\n            stomp.connect({}, (frame) => {\r\n                console.log('Connected to WebSocket:', frame);\r\n    \r\n                const chatMessage = {\r\n                    sender: username,\r\n                    password: password,\r\n                };\r\n                stomp.send(`/app/chat.addUser/${id}`, {}, JSON.stringify(chatMessage));\r\n\r\n                stomp.subscribe(`/topic/room/${id}`, (message) => {\r\n                    if (message.body) {\r\n                      const receivedMessage = JSON.parse(message.body);\r\n                      console.log('Received message:', receivedMessage);\r\n                      // Handle received messages here (e.g., update state)\r\n                    }\r\n                  });\r\n    \r\n      stomp.subscribe(`/topic/users/${id}`, (message) => {\r\n        if (message.body) {\r\n          const userUpdate = JSON.parse(message.body);\r\n          console.log('User update:', userUpdate);\r\n          // Handle user updates here (e.g., update state)\r\n        }\r\n      });\r\n      setStompClient(stomp); // Store the stomp client for future use\r\n    }, (error) => {\r\n      console.error('Error connecting to WebSocket:', error);\r\n    });\r\n        }\r\n    }, [id, password, username]);\r\n    \r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                setShowDropdown(false); // Hide the dropdown if clicking outside\r\n            }\r\n        };\r\n\r\n        // Attach the event listener\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        // Clean up the event listener on component unmount\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [dropdownRef]);\r\n\r\n    const handleUserClick = (user) => {\r\n        console.log(`User clicked: ${user}`);\r\n    };\r\n    const handleAddComment = async () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n\r\n        setAuthHeader(token);\r\n\r\n        try {\r\n            const userIdResponse = await request('GET', '/editor/getId', { editorName: username });\r\n            const userId = userIdResponse.data;\r\n\r\n            const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n            const projectId = projectResponse.data.id;\r\n\r\n            const commentBody = {\r\n                comment: newComment,\r\n                project_id: projectId\r\n            };\r\n\r\n            await request('POST', `/comment/post?userID=${userId}`, commentBody);\r\n\r\n            setComments((prevComments) => [\r\n                ...prevComments,\r\n                { name: username, comment: newComment, date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString() }\r\n            ]);\r\n\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n            alert('Failed to add comment. Please try again.');\r\n        }\r\n    };\r\n    const handleSaveCode = async () => {\r\n        const requestBody = {\r\n            code: projectCode, \r\n            version: version, \r\n            username:username\r\n        };\r\n    \r\n        try {\r\n            const response = await request('POST', 'project/edit?projectName=' + project, requestBody);\r\n            console.log('Code saved successfully:', response.data);\r\n    \r\n            alert('Code saved successfully!');\r\n            fetchProjectCode();\r\n            const chatMessage = {\r\n                sender: username,\r\n                content: \"I edited the code, you must fetch!\",\r\n                type: 'CHAT'\r\n            };\r\n            stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\r\n    \r\n        } catch (error) {\r\n            console.error('Error saving code:', error);\r\n            alert('Error saving code. Please try again.');\r\n        }\r\n    };\r\n    const fetchProjectCode = async () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        \r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n    \r\n        setAuthHeader(token);\r\n    \r\n        try {\r\n            console.log(\"Fetching project code...\");\r\n    \r\n            const response = await request('GET', '/project/getCode', { project_name: project });\r\n    \r\n            console.log(\"Project code response:\", response);\r\n    \r\n            if (response && response.data) {\r\n                setProjectCode(response.data.code);\r\n                setVersion(response.data.version);\r\n                alert('Project code fetched successfully!');\r\n            } else {\r\n                console.error('Code not found:', response);\r\n                setProjectCode(''); // Clear the project code state if not found\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching project code:', error);\r\n            setProjectCode(''); // Clear the project code in case of an error\r\n        }\r\n    };\r\n    const handleExecuteCode = async () => {\r\n        const requestBody = {\r\n            code: projectCode, \r\n            className: project, \r\n        };\r\n\r\n        const language = 'java'; \r\n\r\n        try {\r\n            const response = await request('POST', '/project/execute?language=' + language, requestBody);\r\n            console.log('Code executed successfully:', response.data);\r\n            setExecutionOutput(response.data); \r\n        } catch (error) {\r\n            console.error('Error executing code:', error);\r\n            setExecutionOutput('Error executing code: ' + error.message); \r\n        }\r\n    };\r\n    const handleFetchVersions = async () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        if (!token) {\r\n            alert('Session expired. Please log in again.');\r\n            return;\r\n        }\r\n    \r\n        setAuthHeader(token);\r\n    \r\n        try {\r\n            const response = await request('GET', `/project/${project}/versions`);\r\n            console.log(\"Fetched versions:\", response);\r\n    \r\n            const versionsList = response.data; \r\n            \r\n            if (versionsList && Array.isArray(versionsList)) {\r\n                setVersions(versionsList); \r\n                setShowDropdown(true); \r\n            } else {\r\n                alert('No versions found for the project.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching versions:', error);\r\n            alert('Failed to fetch versions. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleVersionChange = (event) => {\r\n        const version = event.target.value;\r\n        setSelectedVersion(version); \r\n        console.log('Selected version:', version);\r\n    };\r\n\r\n    const handleRevertVersion = async () => {\r\n        if (!selectedVersion) {\r\n            alert('Please select a version to revert.');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const projectResponse = await request('GET', '/project/getId', { project_name: project });\r\n            const projectId = projectResponse.data.id;\r\n    \r\n            const requestBody = {\r\n                projectId: projectId, \r\n                old_version: selectedVersion,\r\n                username:username\r\n            };\r\n    \r\n            const response = await request('POST', `/project/revert?projectName=${project}`, requestBody);\r\n    \r\n            console.log('Revert response:', response.data);\r\n            alert(`Project reverted to version ${selectedVersion}`);\r\n            fetchProjectCode(); \r\n            const chatMessage = {\r\n                sender: username,\r\n                content: \"I Reverted the code, you must fetch!\",\r\n                type: 'CHAT'\r\n            };\r\n            stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\r\n    \r\n        } catch (error) {\r\n            console.error('Error reverting version:', error);\r\n            alert('Failed to revert version. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleSendChatMessage = () => {\r\n        if (!stompClient) {\r\n            alert('Not connected to WebSocket');\r\n            return;\r\n        }\r\n\r\n        const chatMessage = {\r\n            sender: username,\r\n            content: newChatMessage,\r\n            type: 'CHAT'\r\n        };\r\n\r\n        stompClient.send(`/app/chat.sendMessage/${id}`, {}, JSON.stringify(chatMessage));\r\n\r\n        setNewChatMessage('');\r\n    };\r\n    const colors = [\r\n        'green-button',\r\n        'red-button',\r\n        'blue-button',\r\n        'yellow-button',\r\n        'purple-button',\r\n        'orange-button', // New color\r\n        'teal-button',    // New color\r\n        'pink-button',    // New color\r\n        'brown-button',   // New color\r\n        'gray-button'     // New color\r\n    ];\r\n    \r\n    return (\r\n        <div className=\"collaborative-container\">\r\n            <div className=\"logo-container\">\r\n                <img src={atyponLogo} alt=\"AtYpon Logo\" className=\"atypon-logo\" />\r\n            </div>\r\n            \r\n            <div className=\"user-list-section\">\r\n    <h3 style={{ color: 'white' }}>Users in Room</h3>\r\n    {users.length > 0 ? (\r\n        users.map((user, index) => {\r\n            const colorClass = colors[Math.floor(Math.random() * colors.length)];\r\n            return (\r\n                <button\r\n                    key={index}\r\n                    className={`user-button ${colorClass}`}\r\n                    onClick={() => handleUserClick(user)}\r\n                >\r\n                    {user} \r\n                </button>\r\n            );\r\n        })\r\n    ) : (\r\n        <p className=\"no-users-message\">No users online</p>\r\n    )}\r\n</div>\r\n\r\n\r\n            <div className=\"project-name-box\">\r\n                {project ? `Collaborate on project: ${project}` : 'No Project'}\r\n            </div>\r\n            <div className=\"id-box\">\r\n                {loading ? 'Joining room...' : id ? `ID: ${id}` : 'No ID'}\r\n                <br />\r\n                {loading ? '' : password ? `Password: ${password}` : 'No Password'}\r\n            </div>\r\n            <div className=\"comments-section\">\r\n                <h3>Comments</h3>\r\n                {comments.length > 0 ? (\r\n                    <ul>\r\n                        {comments.map((comment, index) => (\r\n                            <li key={index}>\r\n                                <strong>{comment.name}</strong>: {comment.comment} <br />\r\n                                <small>{comment.date} {comment.time}</small>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No comments found.</p>\r\n                )}\r\n            </div>\r\n            <div className=\"add-comment-section\">\r\n                <textarea \r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Add comment\"\r\n                />\r\n                <button onClick={handleAddComment}>Add Comment</button>\r\n            </div>\r\n            <div className=\"code-container\">\r\n                <textarea\r\n                    className=\"styled-textarea\"\r\n                    value={projectCode || ''} \r\n                    onChange={(e) => {setProjectCode(e.target.value)} }\r\n                    rows={20} \r\n                    cols={100} \r\n                    spellCheck=\"false\" \r\n                />\r\n                </div>\r\n                <button className=\"save-button\" onClick={handleSaveCode}>Save Code</button>\r\n   \r\n                <button className=\"run-button\" onClick={handleExecuteCode}>Run Code</button>\r\n                <div className=\"execution-output\">\r\n                <h3>Execution Output:</h3>\r\n                <pre>{executionOutput}</pre>\r\n                </div>\r\n                <div>\r\n            <button className=\"revert-button\" onClick={handleFetchVersions}>\r\n                Revert Version\r\n            </button>\r\n            <button className=\"fetch-code\" onClick={fetchProjectCode}>\r\n                Fetch Code\r\n            </button>\r\n            {showDropdown && (\r\n                <div ref={dropdownRef}> {/* Attach the ref here */}\r\n                    <select\r\n                        className=\"version-dropdown\"\r\n                        value={selectedVersion}\r\n                        onChange={handleVersionChange} \r\n                    >\r\n                        <option value=\"\">Select a version</option>\r\n                        {versions.map((version, index) => (\r\n                            <option key={index} value={version}>\r\n                                {version}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <button className=\"revert-button-v2\" onClick={handleRevertVersion}>\r\n                Revert Version\r\n            </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n            <div className=\"chat-section\">\r\n                <h3>Chat</h3>\r\n                <div className=\"chat-messages\">\r\n                    {chatMessages.length > 0 ? (\r\n                        <ul>\r\n                            {chatMessages.map((msg, index) => (\r\n                                <li key={index}>\r\n                                    <strong>{msg.sender}</strong>: {msg.content} <br />\r\n                                    <small>{msg.date} {msg.time}</small>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No messages yet.</p>\r\n                    )}\r\n                </div>\r\n                <textarea \r\n                    value={newChatMessage}\r\n                    onChange={(e) => setNewChatMessage(e.target.value)}\r\n                    placeholder=\"Type your message here...\"\r\n                />\r\n                <button onClick={handleSendChatMessage}>Send</button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CollaborativeUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}