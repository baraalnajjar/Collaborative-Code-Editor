{"ast":null,"code":"import { request, setAuthHeader } from '../helpers/axios_helper'; // Assuming you have these helper functions\n\nexport const login = async (username, password) => {\n  try {\n    const response = await request('POST', '/admin/login', {\n      login: username,\n      password: password\n    });\n    const token = response.data.token;\n\n    // Store the token for future requests\n    localStorage.setItem('authToken', token);\n    setAuthHeader(token); // Set the authorization header for subsequent requests\n\n    return true; // Login successful\n  } catch (error) {\n    console.error('Login failed:', error);\n    return false; // Login failed\n  }\n};","map":{"version":3,"names":["request","setAuthHeader","login","username","password","response","token","data","localStorage","setItem","error","console"],"sources":["D:/myRepositories/Atypon/Final Project/frontend/src/components/admin/LoginService.js"],"sourcesContent":["import { request, setAuthHeader } from '../helpers/axios_helper'; // Assuming you have these helper functions\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await request('POST', '/admin/login', { login: username, password: password });\r\n    const token = response.data.token;\r\n\r\n    // Store the token for future requests\r\n    localStorage.setItem('authToken', token);\r\n    setAuthHeader(token); // Set the authorization header for subsequent requests\r\n\r\n    return true; // Login successful\r\n  } catch (error) {\r\n    console.error('Login failed:', error);\r\n    return false; // Login failed\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,aAAa,QAAQ,yBAAyB,CAAC,CAAC;;AAElE,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;MAAEE,KAAK,EAAEC,QAAQ;MAAEC,QAAQ,EAAEA;IAAS,CAAC,CAAC;IAC/F,MAAME,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACD,KAAK;;IAEjC;IACAE,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC;IACxCL,aAAa,CAACK,KAAK,CAAC,CAAC,CAAC;;IAEtB,OAAO,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO,KAAK,CAAC,CAAC;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}